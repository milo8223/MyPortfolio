{"version":3,"sources":["pageComponents/Header/MenuContent.js","pageComponents/Header/Head.js","pageComponents/Header/Header.js","pageComponents/About/About.js","App.js","serviceWorker.js","index.js","assets/images/menu.svg","assets/images/multiply.svg","assets/images/profile.jpg"],"names":["Link","MenuContent","props","className","class","onClick","onClose","src","Cross","alt","href","title","Head","state","visible","showDrawer","setState","Fragment","this","Menu","placement","width","closable","Component","Header","id","About","gutter","type","justify","align","span","Profile","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"gRAMQA,E,IAAAA,KAsBOC,EApBK,SAACC,GACpB,OACC,yBAAKC,UAAU,gBACd,yBAAKC,MAAM,SACV,yBAAKA,MAAM,WAAWC,QAASH,EAAMI,SACpC,yBAAKC,IAAKC,IAAOC,IAAI,YAGvB,yBAAKN,UAAU,YAAYE,QAASH,EAAMI,SACzC,2BACC,kBAACN,EAAD,CAAMU,KAAK,gBAAgBC,MAAM,iBACjC,kBAACX,EAAD,CAAMU,KAAK,WAAWC,MAAM,aAC5B,kBAACX,EAAD,CAAMU,KAAK,YAAYC,MAAM,YAC7B,kBAACX,EAAD,CAAMU,KAAK,aAAaC,MAAM,kBCddC,E,2MACpBC,MAAQ,CAAEC,SAAS,G,EAEnBC,WAAa,WACZ,EAAKC,SAAS,CACbF,SAAS,K,EAIXR,QAAU,WACT,EAAKU,SAAS,CACbF,SAAS,K,wEAIV,OACC,kBAAC,IAAMG,SAAP,KACC,yBAAKb,MAAM,aACV,yBAAKA,MAAM,aAAX,SACA,yBAAKD,UAAU,WAAWE,QAASa,KAAKH,YACvC,yBAAKR,IAAKY,IAAMV,IAAI,WAGtB,uBACCW,UAAU,QACVC,MAAO,IACPC,UAAU,EACVhB,QAASY,KAAKZ,QACdQ,QAASI,KAAKL,MAAMC,QACpBX,UAAU,YAEV,kBAAC,EAAD,CAAaG,QAASY,KAAKZ,gB,GA/BEiB,aCHbC,E,iLAEnB,OACC,yBAAKrB,UAAU,cAAcsB,GAAG,gBAC/B,kBAAC,EAAD,MACA,yBAAKtB,UAAU,kBACd,yBAAKA,UAAU,gBACd,yBAAKA,UAAU,SAAf,0BACA,yBAAKA,UAAU,WAAf,qBAGF,yBAAKA,UAAU,aACd,yBAAKA,UAAU,gBACd,yBAAKA,UAAU,8C,GAbeoB,a,mDCCfG,E,iLAEnB,OACC,6BAASvB,UAAU,aAAasB,GAAG,WAClC,yBAAKtB,UAAU,aACd,uBAAKwB,OAAQ,GAAIC,KAAK,OAAOC,QAAQ,eAAeC,MAAM,UACzD,uBAAK3B,UAAU,aAAa4B,KAAM,IACjC,yBAAK5B,UAAU,mBACd,yBAAKA,UAAU,YACd,yBAAKI,IAAKyB,IAASvB,IAAI,eAI1B,uBAAKN,UAAU,aAAa4B,KAAM,IACjC,yBAAK5B,UAAU,aACd,yBAAKA,UAAU,gBACd,wBAAIA,UAAU,SAAd,sBACA,uBAAGA,UAAU,eAAb,iHAKD,yBAAKA,UAAU,gBACd,wBAAIA,UAAU,SAAd,cACA,uBAAGA,UAAU,eAAb,wHAEyC,6BAFzC,uD,GAxB0BoB,aCSpBU,MATf,WACC,OACC,yBAAK9B,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGiB+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB,mBEnInBC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.c020fbbe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Anchor } from 'antd';\r\n\r\nimport Cross from '../../assets/images/multiply.svg';\r\n\r\nconst { Link } = Anchor;\r\n\r\nconst MenuContent = (props) => {\r\n\treturn (\r\n\t\t<div className=\"menu-content\">\r\n\t\t\t<div class=\"cross\">\r\n\t\t\t\t<div class=\"img-wrap\" onClick={props.onClose}>\r\n\t\t\t\t\t<img src={Cross} alt=\"close\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"menu-list\" onClick={props.onClose}>\r\n\t\t\t\t<Anchor>\r\n\t\t\t\t\t<Link href=\"#introduction\" title=\"Introduction\" />\r\n\t\t\t\t\t<Link href=\"#aboutme\" title=\"About Me\" />\r\n\t\t\t\t\t<Link href=\"#services\" title=\"Service\" />\r\n\t\t\t\t\t<Link href=\"#portfolio\" title=\"Portfolio\" />\r\n\t\t\t\t</Anchor>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","import React, { Component } from 'react';\r\n\r\nimport { Drawer } from 'antd';\r\n\r\nimport Menu from '../../assets/images/menu.svg';\r\nimport MenuContent from './MenuContent';\r\n\r\nexport default class Head extends Component {\r\n\tstate = { visible: false };\r\n\r\n\tshowDrawer = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: true\r\n\t\t});\r\n\t};\r\n\r\n\tonClose = () => {\r\n\t\tthis.setState({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div class=\"menu-wrap\">\r\n\t\t\t\t\t<div class=\"logo-wrap\">Milan</div>\r\n\t\t\t\t\t<div className=\"img-wrap\" onClick={this.showDrawer}>\r\n\t\t\t\t\t\t<img src={Menu} alt=\"menu\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tplacement=\"right\"\r\n\t\t\t\t\twidth={450}\r\n\t\t\t\t\tclosable={false}\r\n\t\t\t\t\tonClose={this.onClose}\r\n\t\t\t\t\tvisible={this.state.visible}\r\n\t\t\t\t\tclassName=\"sidemenu\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<MenuContent onClose={this.onClose} />\r\n\t\t\t\t</Drawer>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Head from './Head';\r\n\r\nexport default class Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"home-banner\" id=\"introduction\">\r\n\t\t\t\t<Head />\r\n\t\t\t\t<div className=\"banner-content\">\r\n\t\t\t\t\t<div className=\"text-content\">\r\n\t\t\t\t\t\t<div className=\"title\">Hello, I'm Milan Thapa</div>\r\n\t\t\t\t\t\t<div className=\"caption\">A Web Developer</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"move-down\">\r\n\t\t\t\t\t<div className=\"banner-mouse\">\r\n\t\t\t\t\t\t<div className=\"mouse-bar animated infinite bounce\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport Profile from '../../assets/images/profile.jpg';\r\n\r\nexport default class About extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section className=\"about-wrap\" id=\"aboutme\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Row gutter={16} type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n\t\t\t\t\t\t<Col className=\"gutter-row\" span={12}>\r\n\t\t\t\t\t\t\t<div className=\"gutter-box flex\">\r\n\t\t\t\t\t\t\t\t<div className=\"img-wrap\">\r\n\t\t\t\t\t\t\t\t\t<img src={Profile} alt=\"profile\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col className=\"gutter-row\" span={12}>\r\n\t\t\t\t\t\t\t<div className=\"info-text\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-content\">\r\n\t\t\t\t\t\t\t\t\t<h3 className=\"title\">Hi! call me Milan.</h3>\r\n\t\t\t\t\t\t\t\t\t<p className=\"description\">\r\n\t\t\t\t\t\t\t\t\t\tI'm a Web Developer, sometimes an Ui Designer and most of the times an\r\n\t\t\t\t\t\t\t\t\t\tAdventurer based in Kathmandu, Nepal.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"text-content\">\r\n\t\t\t\t\t\t\t\t\t<h3 className=\"title\">What i do?</h3>\r\n\t\t\t\t\t\t\t\t\t<p className=\"description\">\r\n\t\t\t\t\t\t\t\t\t\tI'm responsible for implementing visual elements that users see and interact\r\n\t\t\t\t\t\t\t\t\t\twith in a web applications or websites. <br />\r\n\t\t\t\t\t\t\t\t\t\tIn short, my work is to please your eyes.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\nimport './styles/styles.scss';\nimport Header from './pageComponents/Header/Header';\nimport About from './pageComponents/About/About';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<About />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/menu.1f762e57.svg\";","module.exports = __webpack_public_path__ + \"static/media/multiply.46f0b8e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/profile.66e0a353.jpg\";"],"sourceRoot":""}